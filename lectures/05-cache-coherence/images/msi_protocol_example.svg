<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<svg width="1100" height="750" viewBox="0 0 1100 750" xmlns="http://www.w3.org/2000/svg">
  <!-- Styles -->
  <style>
    .background { fill: white; }
    .box { fill: white; stroke: #004065; stroke-width: 2; }
    .memory { fill: #f0f0f0; stroke: #004065; stroke-width: 2; }
    .processor { fill: #e6f3ff; stroke: #004065; stroke-width: 2; }
    .cache { fill: #fffae6; stroke: #004065; stroke-width: 2; }
    .cache-block { fill: white; stroke: #004065; stroke-width: 1; }
    .cache-block-modified { fill: #FFD200; stroke: #004065; stroke-width: 1; }
    .cache-block-shared { fill: #e6f3ff; stroke: #004065; stroke-width: 1; }
    .cache-block-invalid { fill: #f0f0f0; stroke: #004065; stroke-width: 1; }
    .arrow { stroke: #004065; stroke-width: 2; fill: none; marker-end: url(#arrowhead); }
    .arrow-highlight { stroke: #cc0000; stroke-width: 2; stroke-dasharray: 5,3; fill: none; marker-end: url(#arrowhead-highlight); }
    .state { font-weight: bold; }
    .modified { fill: #FFD200; }
    .shared { fill: #004065; }
    .invalid { fill: #aaaaaa; }
    text { font-family: Arial, sans-serif; font-size: 16px; fill: #333; }
    .title { font-size: 26px; font-weight: bold; }
    .step { font-size: 20px; font-weight: bold; fill: #004065; }
    .data { font-weight: bold; }
    .bus { fill: #d9d9d9; stroke: #004065; stroke-width: 2; }
    .bus-label { font-size: 18px; font-style: italic; }
    .action-text { font-style: italic; fill: #cc0000; }
    .step-box { fill: #f5f5f5; stroke: #004065; stroke-width: 1; }
    .text-bg { fill: white; fill-opacity: 0.85; stroke: #cccccc; stroke-width: 1; rx: 5; ry: 5; }
    .cache-state-label { font-size: 14px; fill: #555; }
    .step-indicator { fill: #e9f5ff; stroke: #004065; stroke-width: 1.5; }
  </style>
  
  <!-- Arrow marker definition -->
  <defs>
    <marker id="arrowhead" markerWidth="10" markerHeight="7" refX="10" refY="3.5" orient="auto">
      <polygon points="0 0, 10 3.5, 0 7" fill="#004065"/>
    </marker>
    <marker id="arrowhead-highlight" markerWidth="10" markerHeight="7" refX="10" refY="3.5" orient="auto">
      <polygon points="0 0, 10 3.5, 0 7" fill="#cc0000"/>
    </marker>
  </defs>
  
  <!-- Full background -->
  <rect width="1100" height="750" class="background"/>
  
  <!-- Title -->
  <rect x="300" y="15" width="500" height="40" class="text-bg"/>
  <text x="550" y="43" text-anchor="middle" class="title">MSI Protocol Example: Step-by-Step</text>
  
  <!-- System Bus -->
  <rect x="50" y="350" width="1000" height="50" rx="5" class="bus"/>
  <rect x="450" y="365" width="200" height="25" class="text-bg"/>
  <text x="550" y="385" text-anchor="middle" class="bus-label">System Bus</text>
  
  <!-- Memory -->
  <rect x="450" y="650" width="160" height="80" rx="5" class="memory"/>
  <rect x="470" y="660" width="120" height="25" class="text-bg"/>
  <text x="530" y="680" text-anchor="middle">Memory</text>
  <!-- Memory value changes in Step 5 -->
  <rect x="470" y="690" width="120" height="25" class="text-bg"/>
  <text x="530" y="710" text-anchor="middle" class="data" id="memory-value">X = 0</text>
  
  <!-- Processor 1 Setup -->
  <rect x="200" y="120" width="200" height="70" rx="5" class="processor"/>
  <rect x="220" y="140" width="160" height="30" class="text-bg"/>
  <text x="300" y="160" text-anchor="middle">Processor 1</text>
  
  <!-- Processor 1 Cache -->
  <rect x="200" y="210" width="200" height="120" rx="5" class="cache"/>
  <rect x="220" y="220" width="160" height="25" class="text-bg"/>
  <text x="300" y="240" text-anchor="middle">Cache P1</text>
  
  <!-- Processor 2 Setup -->
  <rect x="700" y="120" width="200" height="70" rx="5" class="processor"/>
  <rect x="720" y="140" width="160" height="30" class="text-bg"/>
  <text x="800" y="160" text-anchor="middle">Processor 2</text>
  
  <!-- Processor 2 Cache -->
  <rect x="700" y="210" width="200" height="120" rx="5" class="cache"/>
  <rect x="720" y="220" width="160" height="25" class="text-bg"/>
  <text x="800" y="240" text-anchor="middle">Cache P2</text>
  
  <!-- Step Indicators on the left -->
  <rect x="20" y="80" width="160" height="550" rx="10" class="background" stroke="#004065" stroke-width="1" stroke-dasharray="5,5"/>
  <text x="100" y="100" text-anchor="middle" class="step">Protocol Steps</text>
  
  <!-- Step 1: Initial state -->
  <g id="step1">
    <!-- Step indicator -->
    <rect x="30" y="120" width="140" height="50" rx="5" class="step-indicator"/>
    <text x="100" y="150" text-anchor="middle" class="step">Step 1</text>
    <rect x="30" y="155" width="140" height="30" class="text-bg"/>
    <text x="100" y="175" text-anchor="middle">Initial state</text>
    
    <!-- Cache state for Step 1 -->
    <g id="cache-state-step1" class="cache-state">
      <!-- P1 cache in invalid state -->
      <rect x="220" y="250" width="160" height="70" rx="3" class="cache-block-invalid"/>
      <rect x="230" y="255" width="30" height="25" class="text-bg"/>
      <text x="245" y="275" class="state invalid">I</text>
      <rect x="260" y="268" width="80" height="25" class="text-bg"/>
      <text x="300" y="285" text-anchor="middle" class="data">Block X</text>
      <rect x="350" y="255" width="20" height="25" class="text-bg"/>
      <text x="360" y="275" text-anchor="middle" class="data">-</text>
      
      <!-- P2 cache in invalid state -->
      <rect x="720" y="250" width="160" height="70" rx="3" class="cache-block-invalid"/>
      <rect x="730" y="255" width="30" height="25" class="text-bg"/>
      <text x="745" y="275" class="state invalid">I</text>
      <rect x="760" y="268" width="80" height="25" class="text-bg"/>
      <text x="800" y="285" text-anchor="middle" class="data">Block X</text>
      <rect x="850" y="255" width="20" height="25" class="text-bg"/>
      <text x="860" y="275" text-anchor="middle" class="data">-</text>
    </g>
  </g>
  
  <!-- Step 2: P1 reads X -->
  <g id="step2">
    <!-- Step indicator -->
    <rect x="30" y="190" width="140" height="80" rx="5" class="step-indicator"/>
    <text x="100" y="220" text-anchor="middle" class="step">Step 2</text>
    <rect x="30" y="225" width="140" height="30" class="text-bg"/>
    <text x="100" y="245" text-anchor="middle">P1 reads X</text>
    
    <!-- Action on bus -->
    <rect x="380" y="425" width="140" height="30" class="text-bg"/>
    <text x="450" y="445" text-anchor="middle" class="action-text">Bus: Read X</text>
    
    <!-- Memory responds with data -->
    <path d="M530 650 L300 400" class="arrow"/>
    
    <!-- Cache state for Step 2 -->
    <g id="cache-state-step2" class="cache-state" opacity="0.5">
      <!-- P1 cache in shared state -->
      <rect x="220" y="250" width="160" height="70" rx="3" class="cache-block-shared"/>
      <rect x="230" y="255" width="30" height="25" class="text-bg"/>
      <text x="245" y="275" class="state shared">S</text>
      <rect x="260" y="268" width="80" height="25" class="text-bg"/>
      <text x="300" y="285" text-anchor="middle" class="data">Block X</text>
      <rect x="350" y="255" width="20" height="25" class="text-bg"/>
      <text x="360" y="275" text-anchor="middle" class="data">0</text>
      
      <!-- P2 cache still invalid -->
      <rect x="720" y="250" width="160" height="70" rx="3" class="cache-block-invalid"/>
      <rect x="730" y="255" width="30" height="25" class="text-bg"/>
      <text x="745" y="275" class="state invalid">I</text>
      <rect x="760" y="268" width="80" height="25" class="text-bg"/>
      <text x="800" y="285" text-anchor="middle" class="data">Block X</text>
      <rect x="850" y="255" width="20" height="25" class="text-bg"/>
      <text x="860" y="275" text-anchor="middle" class="data">-</text>
    </g>
  </g>
  
  <!-- Step 3: P2 reads X -->
  <g id="step3">
    <!-- Step indicator -->
    <rect x="30" y="280" width="140" height="80" rx="5" class="step-indicator"/>
    <text x="100" y="310" text-anchor="middle" class="step">Step 3</text>
    <rect x="30" y="315" width="140" height="30" class="text-bg"/>
    <text x="100" y="335" text-anchor="middle">P2 reads X</text>
    
    <!-- Action on bus -->
    <rect x="580" y="425" width="140" height="30" class="text-bg"/>
    <text x="650" y="445" text-anchor="middle" class="action-text">Bus: Read X</text>
    
    <!-- Memory responds with data -->
    <path d="M530 650 L800 400" class="arrow"/>
    
    <!-- Cache state for Step 3 -->
    <g id="cache-state-step3" class="cache-state" opacity="0.3">
      <!-- P1 cache in shared state -->
      <rect x="220" y="250" width="160" height="70" rx="3" class="cache-block-shared"/>
      <rect x="230" y="255" width="30" height="25" class="text-bg"/>
      <text x="245" y="275" class="state shared">S</text>
      <rect x="260" y="268" width="80" height="25" class="text-bg"/>
      <text x="300" y="285" text-anchor="middle" class="data">Block X</text>
      <rect x="350" y="255" width="20" height="25" class="text-bg"/>
      <text x="360" y="275" text-anchor="middle" class="data">0</text>
      
      <!-- P2 cache now shared -->
      <rect x="720" y="250" width="160" height="70" rx="3" class="cache-block-shared"/>
      <rect x="730" y="255" width="30" height="25" class="text-bg"/>
      <text x="745" y="275" class="state shared">S</text>
      <rect x="760" y="268" width="80" height="25" class="text-bg"/>
      <text x="800" y="285" text-anchor="middle" class="data">Block X</text>
      <rect x="850" y="255" width="20" height="25" class="text-bg"/>
      <text x="860" y="275" text-anchor="middle" class="data">0</text>
    </g>
  </g>
  
  <!-- Step 4: P1 writes to X -->
  <g id="step4">
    <!-- Step indicator -->
    <rect x="30" y="370" width="140" height="80" rx="5" class="step-indicator"/>
    <text x="100" y="400" text-anchor="middle" class="step">Step 4</text>
    <rect x="30" y="405" width="140" height="50" class="text-bg"/>
    <text x="100" y="425" text-anchor="middle">P1 writes X=1</text>
    <text x="100" y="445" text-anchor="middle">(invalidates P2)</text>
    
    <!-- Action on bus -->
    <rect x="380" y="465" width="200" height="30" class="text-bg"/>
    <text x="480" y="485" text-anchor="middle" class="action-text">Bus: Invalidate X</text>
    
    <!-- P1 sends invalidation -->
    <path d="M300 400 L800 400" class="arrow-highlight"/>
    
    <!-- Cache state for Step 4 -->
    <g id="cache-state-step4" class="cache-state" opacity="0.2">
      <!-- P1 cache in modified state -->
      <rect x="220" y="250" width="160" height="70" rx="3" class="cache-block-modified"/>
      <rect x="230" y="255" width="30" height="25" class="text-bg"/>
      <text x="245" y="275" class="state modified">M</text>
      <rect x="260" y="268" width="80" height="25" class="text-bg"/>
      <text x="300" y="285" text-anchor="middle" class="data">Block X</text>
      <rect x="350" y="255" width="20" height="25" class="text-bg"/>
      <text x="360" y="275" text-anchor="middle" class="data">1</text>
      
      <!-- P2 cache invalidated -->
      <rect x="720" y="250" width="160" height="70" rx="3" class="cache-block-invalid"/>
      <rect x="730" y="255" width="30" height="25" class="text-bg"/>
      <text x="745" y="275" class="state invalid">I</text>
      <rect x="760" y="268" width="80" height="25" class="text-bg"/>
      <text x="800" y="285" text-anchor="middle" class="data">Block X</text>
      <rect x="850" y="255" width="20" height="25" class="text-bg"/>
      <text x="860" y="275" text-anchor="middle" class="data">-</text>
    </g>
  </g>
  
  <!-- Step 5: P2 reads X again -->
  <g id="step5">
    <!-- Step indicator -->
    <rect x="30" y="460" width="140" height="90" rx="5" class="step-indicator"/>
    <text x="100" y="490" text-anchor="middle" class="step">Step 5</text>
    <rect x="30" y="495" width="140" height="50" class="text-bg"/>
    <text x="100" y="515" text-anchor="middle">P2 reads X</text>
    <text x="100" y="535" text-anchor="middle">again</text>
    
    <!-- Action on bus -->
    <rect x="380" y="505" width="340" height="30" class="text-bg"/>
    <text x="550" y="525" text-anchor="middle" class="action-text">Bus: Read X (P1 provides data and updates memory)</text>
    
    <!-- P1 provides data to P2 -->
    <path d="M300 400 L800 400" class="arrow"/>
    
    <!-- P1 also writes back to memory -->
    <path d="M300 400 L530 650" class="arrow"/>
    
    <!-- Cache state for Step 5 -->
    <g id="cache-state-step5" class="cache-state" opacity="0.1">
      <!-- P1 cache back to shared state -->
      <rect x="220" y="250" width="160" height="70" rx="3" class="cache-block-shared"/>
      <rect x="230" y="255" width="30" height="25" class="text-bg"/>
      <text x="245" y="275" class="state shared">S</text>
      <rect x="260" y="268" width="80" height="25" class="text-bg"/>
      <text x="300" y="285" text-anchor="middle" class="data">Block X</text>
      <rect x="350" y="255" width="20" height="25" class="text-bg"/>
      <text x="360" y="275" text-anchor="middle" class="data">1</text>
      
      <!-- P2 cache now shared with updated value -->
      <rect x="720" y="250" width="160" height="70" rx="3" class="cache-block-shared"/>
      <rect x="730" y="255" width="30" height="25" class="text-bg"/>
      <text x="745" y="275" class="state shared">S</text>
      <rect x="760" y="268" width="80" height="25" class="text-bg"/>
      <text x="800" y="285" text-anchor="middle" class="data">Block X</text>
      <rect x="850" y="255" width="20" height="25" class="text-bg"/>
      <text x="860" y="275" text-anchor="middle" class="data">1</text>
    </g>
  </g>
  
  <!-- Cache State Selector -->
  <rect x="30" y="560" width="140" height="60" rx="5" class="step-box"/>
  <text x="100" y="575" text-anchor="middle" class="cache-state-label">View Cache State:</text>
  <text x="100" y="605" text-anchor="middle" class="cache-state-label">(Steps overlay visually)</text>
  
  <!-- Final memory value (after step 5) -->
  <rect x="400" y="580" width="300" height="40" class="step-box"/>
  <text x="550" y="605" text-anchor="middle" class="data">Final Memory Value: X = 1</text>
  
  <script type="text/javascript">
    // <![CDATA[
    // For interactive use, we'd add JavaScript to show/hide cache states
    // based on which step is being viewed
    
    // In a real interactive SVG, we would use JavaScript to control
    // the visibility of each cache state layer

    // This would allow users to see the progression of states
    // by stepping through each stage of the protocol
    
    // For the static version, we're showing all states with different opacity
    // to illustrate the progression
    // ]]>
  </script>
</svg> 